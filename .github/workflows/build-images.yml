name: Build

on:
  pull_request:
      branches:
        - main
  push:
      paths-ignore:
        - '.build/**'
  deployment:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:

  build-images:
    name: Build and Push images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
            # Distroless image
          - modules: quarkus-distroless-base-image

            # Default UBI base image
          - modules: quarkus-micro-base-image
            ubi: default
          - modules: quarkus-binary-s2i,quarkus-native-s2i
            ubi: default
          - modules: quarkus-mandrel-builder-image
            ubi: default
          - modules: quarkus-mandrel-builder-image
            args: -Polder-mandrel
            ubi: default
          - modules: quarkus-graalvm-builder-image
            ubi: default
          - modules: quarkus-graalvm-builder-image
            args: -Polder-graalvm
            ubi: default

            # UBI 9 base image
          - modules: quarkus-micro-base-image
            ubi: "9.1"
          - modules: quarkus-binary-s2i,quarkus-native-s2i
            ubi: "9.1"
          - modules: quarkus-mandrel-builder-image
            ubi: "9.1"
          - modules: quarkus-mandrel-builder-image
            args: -Polder-mandrel
            ubi: "9.1"
          - modules: quarkus-graalvm-builder-image
            ubi: "9.1"
          - modules: quarkus-graalvm-builder-image
            args: -Polder-graalvm
            ubi: "9.1"

    steps:
    - id: prepare
      run: |
        # Re-claim some disk space
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt-get clean
        docker image ls -aq | xargs -r docker rmi
        df -h
        
        # Set up UBI params
        if [ -n "${{ matrix.ubi }}" ] && [ "${{ matrix.ubi }}" != "default" ]; then
          IFS='.' read -r ubi_major ubi_minor <<< "${{ matrix.ubi }}"
          echo "ubi-args=-Dubi.tag=ubi${ubi_major} -Dubi.rel.major=${ubi_major} -Dubi.rel.minor=${ubi_minor}" >> "$GITHUB_OUTPUT"
        else
          echo "ubi-args=" >> "$GITHUB_OUTPUT"
        fi
        
        # Should publish images?
        publish_types=(deployment schedule workflow_dispatch)
        inarray=$(echo ${publish_types[@]} | grep -o "${{ github.event_name }}" | wc -w)
        if (( inarray )) || \
          [ "${{ github.event_name }}" == "push" ] && \
          [ "${{ github.repository }}" == 'quarkusio/quarkus-images' ] && \
          [ "${{ github.ref }}" == 'main' ]; then
          echo "publish=true" >> "$GITHUB_OUTPUT"
          echo 'publish-args=-Ppush' >> "$GITHUB_OUTPUT
        else
          echo "publish=false" >> "$GITHUB_OUTPUT"
          echo 'publish-args=' >> "$GITHUB_OUTPUT
        fi
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Login to GitHub Container Registry
      if: ${{ steps.prepare.outputs.publish == 'true' }}
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USER }}
        password: ${{ secrets.QUAY_TOKEN }}

    - name: Build ${{ matrix.name }} on ${{ matrix.ubi }}
      run:
        mvn install
          --projects ${{ matrix.modules }}
          --also-make
          -DskipTests
          ${{ matrix.args }}
          ${{ steps.prepare.outputs.ubi-args }}
          ${{ steps.prepare.outputs.publish-args }}
    - name: Print ${{ matrix.name}}
      if: always()
      run: docker images