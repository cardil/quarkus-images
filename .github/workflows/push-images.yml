name: Push Images to Quay
on:
  deployment:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:

  build-images:
    name: Build and Push images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "base images"
            modules: "quarkus-distroless-base-image,quarkus-micro-base-image"
            args: ""
          - name: "s2i images"
            modules: "quarkus-binary-s2i,quarkus-native-s2i"
            args: ""
          - name: "mandrel builder images"
            modules: "quarkus-mandrel-builder-image"
            args: ""
          - name: "mandrel builder images 21 and 22.0"
            modules: "quarkus-mandrel-builder-image"
            args: "-Polder-mandrel"
          - name: "graalvm ce builder images"
            modules: "quarkus-graalvm-builder-image"
            args: ""
          - name: "graalvm ce builder images 21 and 22.0"
            modules: "quarkus-graalvm-builder-image"
            args: "-Polder-graalvm"
    steps:
      - run: |
          # Re-claim some disk space
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt-get clean
          docker image ls -aq | xargs -r docker rmi
          df -h
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Build images
        run: mvn install --projects ${{ matrix.modules }} --also-make -DskipTests -Ppush ${{ matrix.args }}
      - name: Print ${{ matrix.name}}
        if: always()
        run: |
          df -h
          docker images